"""
Django settings for skn_last_small_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    DEBUG=(bool, False),
)
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

PINECONE_PJ_KEY     = env("PINECONE_PJ_KEY")
OPENAI_API_KEY      = env("OPENAI_API_KEY")
INDEX_NAME          = "food-index"
EMBED_MODEL         = "text-embedding-3-small"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hm=v0t0_x_h=#&^w@1u-xzm!u%mf%4^kstsbp&rok!3eod($69'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOST = os.getenv("ALLOWED_HOST", "127.0.0.1")
ALLOWED_HOSTS = [ALLOWED_HOST, ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    "mainapp",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'skn_last_small_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / "templates" ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'skn_last_small_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'django_qna_db',
    #     'USER' : 'wlgns',
    #     'PASSWORD' : 'wlgns',
    #     'HOST' : '127.0.0.1',
    #     'PORT' : '3306',
    #     'OPTIONS': {
    #         'charset': 'utf8mb4',
    #     },
    # }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        "OPTIONS": {
            "min_length":4
        }
    },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [ BASE_DIR / "static" ]

# 배포 시에는 collectstatic 으로 모을 위치
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 로그인 성공한 후의 리다이렉트 URL ( 기본값 = /accounts/profile )
# LOGIN_REDIRECT_URL = '/qna/'
LOGIN_REDIRECT_URL = '/main/'


# 파일업로드 관련 설정
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"


print("== JIHUN ==", f"{BASE_DIR=}")
print("== JIHUN ==", f"{STATICFILES_DIRS=}")
print("== JIHUN ==", f"{STATIC_ROOT=}")


# docker build --build-arg OPENAI_API_KEY=dummy --build-arg PINECONE_PJ_KEY=dummy -t jihunsong88/skn-4th-team4 .
# docker push jihunsong88/skn-4th-team4
# docker network create skn14-network
# docker volume create skn14-team4-volume
# docker volume create media-volume
# docker run -d --name skn14-team4 -v skn14-team4-volume:/app/static -v media-volume:/app/media -e PINECONE_PJ_KEY=실제키값 -e OPENAI_API_KEY=실제키값 -e ALLOWED_HOST=52.79.81.31 --network skn14-network  jihunsong88/skn-4th-team4
# docker run -d --name nginx -p 80:80 -v skn14-team4-volume:/staticfiles -v media-volume:/web_media -v $(pwd)/nginx.conf:/etc/nginx/conf.d/default.conf --network skn14-network nginx

